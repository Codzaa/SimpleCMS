@page "/dashboard/sites"
@using cms.Data
@using Microsoft.EntityFrameworkCore
@inject AppDBContext _appDbContext
@inject UserService _userService
@inject NavigationManager _navigationManager
@inject AuthService _authService
<br>

@if( _mysites.Count == 0){

    <h1 class="text-center">No Websites</h1>

}

@if( _mysites != null){

    
<table class="table">
  <thead>
    <tr>
      <th scope="col">Site Name</th>
      <th scope="col">Site Description</th>
      <th scope="col">Options</th>
    </tr>
  </thead>

  <tbody>
    
    @foreach (var site in _mysites)
    {
      <tr>
        <td>@site.SiteName</td>
        <td>@site.SiteDescription</td>
        <button class="btn btn-warning">
            <td @onclick="@(e => GoToPage(@site.Id))">Update</td>
        </button>
      </tr>
    }
   
  </tbody>

</table>
}

@code{

    /// After first Render
    /// Get User Websites from the Database

    private List<CustomSite> _mysites = new List<CustomSite>();
    protected override async Task OnInitializedAsync()
    {
      /// Check if user is Authourized
        if(!_authService.isAuthourized){
          ///Not Logged in
          ///Reroute to Auth Page
          _navigationManager.NavigateTo("/login");
        }
        //await _appDbContext.CustomSites.Find(element => element.OwnerId == _userService.GlobalUser.Id);
        //var user = await _appDBContext.CustomUsers.FirstOrDefaultAsync(element => element.UserName.Equals(_userToLogin.UserName));
        var sites = await _appDbContext.CustomSites.ToListAsync();
        Console.WriteLine("My Id" + _userService.GlobalUser.Id);
        _mysites = sites.FindAll(element => element.OwnerId.Equals(_userService.GlobalUser.Id));
    }

    private async Task GoToPage(int pageId){
        //
        _navigationManager.NavigateTo("/updatesite/" + pageId);
        //
    }
}



